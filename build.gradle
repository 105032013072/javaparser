buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
}

plugins {
  id 'net.saliman.cobertura' version '2.3.1'
  id 'com.github.kt3k.coveralls' version '2.6.3'
}

apply plugin: 'maven'
apply plugin: 'idea'

allprojects  {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'jacoco'

  group = 'com.github.javaparser'
  version = '0.4-SNAPSHOT'

  repositories {
    mavenCentral()
    
    maven { url "http://repo.maven.apache.org/maven2" }
  }

  jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("$buildDir/test_coverage")
  }

  jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
  }  
}

subprojects {
  apply plugin: 'java'
  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
    mavenCentral()
  }

  task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
  }

  task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  artifacts {
    archives javadocJar, sourcesJar
  }
}

allprojects {
  apply plugin: 'signing'
  apply plugin: 'maven'

  if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
  }

  task writeNewPom {
    doLast {
      pom.project {
        name project.name
        description project.description
        packaging 'jar'
        url 'https://github.com/javaparser/java-symbol-solver'

        scm {
          connection 'scm:git:https://github.com/javaparser/java-symbol-solver.git'
          developerConnection 'scm:git:git@github.com:javaparser/java-symbol-solver.git'
          url 'https://github.com/ftomassetti/java-symbol-solver.git'
        }

        licenses {
          license {
            name 'The MIT License (MIT)'
            url 'http://opensource.org/licenses/MIT'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id = 'ftomassetti'
            name = 'Federico Tomassetti'
            email = 'federico@tomassetti.me'
          }
        }
      }.writeTo("$buildDir/newpom.xml")
    }
  }
}


test {
  testLogging {
    exceptionFormat = 'full'
  }
}
