  Line 58) getParentNode(wrappedNode) ==> ERROR
  Line 59) getParentNode(wrappedNode) ==> ERROR
  Line 62) JavaParserFactory.toTypeDeclaration(getParentNode(wrappedNode), typeSolver) ==> ERROR
  Line 62) getParentNode(wrappedNode) ==> ERROR
  Line 68) JavaParserFacade.get(typeSolver).convert(wrappedNode.getType(), getContext()) ==> ERROR
  Line 68) JavaParserFacade.get(typeSolver) ==> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
  Line 68) wrappedNode.getType() ==> ERROR
  Line 68) getContext() ==> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getContext()
  Line 73) wrappedNode.getParameters().size() ==> ERROR
  Line 73) wrappedNode.getParameters() ==> ERROR
  Line 78) getNumberOfParams() ==> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getNumberOfParams()
  Line 79) String.format("No param with index %d. Number of params: %d", i, getNumberOfParams()) ==> java.lang.String.format(java.lang.String, java.lang.Object...)
  Line 79) getNumberOfParams() ==> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getNumberOfParams()
  Line 81) wrappedNode.getParameters().get(i) ==> ERROR
  Line 81) wrappedNode.getParameters() ==> ERROR
  Line 89) new MethodDeclarationCommonLogic(this, typeSolver).resolveTypeVariables(context, parameterTypes) ==> com.github.javaparser.symbolsolver.declarations.common.MethodDeclarationCommonLogic.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>)
  Line 93) JavaParserFactory.getContext(wrappedNode, typeSolver) ==> ERROR
  Line 98) wrappedNode.getBody().isPresent() ==> ERROR
  Line 98) wrappedNode.getBody() ==> ERROR
  Line 103) wrappedNode.getName().getId() ==> ERROR
  Line 103) wrappedNode.getName() ==> ERROR
  Line 123) this.wrappedNode.getTypeParameters().stream().map((astTp) -> new JavaParserTypeParameter(astTp, typeSolver)).collect(Collectors.toList()) ==> ERROR
  Line 123) this.wrappedNode.getTypeParameters().stream().map((astTp) -> new JavaParserTypeParameter(astTp, typeSolver)) ==> ERROR
  Line 123) this.wrappedNode.getTypeParameters().stream() ==> ERROR
  Line 123) this.wrappedNode.getTypeParameters() ==> ERROR
  Line 123) Collectors.toList() ==> java.util.stream.Collectors.toList()
  Line 128) wrappedNode.isDefault() ==> ERROR
  Line 133) wrappedNode.isStatic() ==> ERROR
  Line 147) Helper.toAccessLevel(wrappedNode.getModifiers()) ==> ERROR
  Line 147) wrappedNode.getModifiers() ==> ERROR
